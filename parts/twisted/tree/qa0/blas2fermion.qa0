(include "types.qa0")

;; Convert a Fortran complex array into internal twisted layout.
;; This routine must be the inverse of fermion->blas

;; r memory order:
;;  [0].[0][0].re
;;  [0].[0][0].im
;;  [0].[0][1].re
;;  [0].[0][1].im
;;  ...
;;  [0].[0][nF-1].im
;;  [1].[1][0].re
;;  ...
;;  [0].[nC-1][nF-1].im
;;  [1].[0][0].re
;;  ...
;;  [size-1].[nC-1][nF-1].im
;;
(procedure blas->fermion ([stem "blas2fermion"]
                        prec&color)
           ([F         pointer "F"         "struct FermionX *" ]
            [size      int     "size"      "size_t"               ]
            [data      pointer "r"         "const void *"      ])

   (loop () (x [const 0] [reg size])
     (loop () (c [const 0] [const *colors*])
       (loop () (d [const 0] [const *fermion-dim*])
         (load REAL () v-re ([reg data]))
         (load REAL () v-im ([reg data] [const (size-of REAL)]))
         (op pointer-add () (data) ([reg data] [const (* 2 (size-of REAL))]))
         (op qcd-fermion-offset () (cd) ([reg c] [reg d]))
         (op pointer-add () (p) ([reg F] [reg cd]))
         (op complex () (v) ([reg v-re] [reg v-im]))
         (store COMPLEX () ([reg p]) [reg v])))
     (op pointer-add () (F) ([reg F] [const (size-of Fermion)]))))
