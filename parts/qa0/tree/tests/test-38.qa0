(define (m-x a b c)
  (op int-add () (x) ([reg b] [reg c]))
  (op int-mul () (a) ([reg b] [reg x])))

(define (m-y a x)
  (macro m-x [reg z] [reg x] [reg x])
  (macro m-x [reg a] [reg z] [reg x]))

(procedure foo ([stem "foo"]
                [return result int "int"])
   ([a int "a" "int"])
  (macro m-y (reg b) (reg a))
  (macro m-y (reg result) (reg b)))
