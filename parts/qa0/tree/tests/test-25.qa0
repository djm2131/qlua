;; B and A+F
;;
;; hi-i and lo-i count in fermions from the current location, i.
;;
(structure A-table "ATable" ([lo-i     "lo"    int]
                             [hi-i     "hi"    int]
                             [c-alpha  "c"     double]
                             [lo-alpha "lo_c"  double]
                             [hi-alpha "hi_c"  double]))

(array  dir-array "x_dir"  int [const *dim*])

(structure F-table "FTable" ([mask     "mask"    int]
                             [up-U     "upU"     int]
                             [down-U   "downU"   dir-array]
                             [up-F     "upF"     dir-array]
                             [down-F   "downF"   dir-array]))

(procedure A-B  ([stem "do_AB"] count-flops)
           ([res-x     pointer   "result"    "struct Fermion *"              ]
	    [size      int       "size"      "int"                           ]
            [LsV       int       "LsV"       "int"                           ]
            [a-table   pointer   "a_table"   "const struct ATable *"         ]
            [src-x     pointer   "src_x"     "const struct Fermion *"        ])
  (loop () (i [const 0] [reg size])
    ; XX
    (op pointer-move () (a-k) ([reg a-table]))
    (loop () (k [const 0] [reg LsV])
       (load int () lo-i ([reg a-k] [const (offset-of A-table lo-i)]))
       (load int () hi-i ([reg a-k] [const (offset-of A-table hi-i)]))
       (load double () c ([reg a-k] [const (offset-of A-table c-alpha)]))
       (load double () hi ([reg a-k] [const (offset-of A-table hi-alpha)]))
       (load double () lo ([reg a-k] [const (offset-of A-table lo-alpha)]))
       (op int-mul () (lo-off) ([reg lo-i] [const (size-of Fermion)]))
       (op int-mul () (hi-off) ([reg hi-i] [const (size-of Fermion)]))
       (op int-add () (s-lo) ([reg src-x] [reg lo-off]))
       (op int-add () (s-hi) ([reg src-x] [reg hi-off]))
       (load qcd-fermion () s-c ([reg src-x]))
       (load qcd-fermion-lo () s-lo ([reg s-lo]))
       (load qcd-fermion-hi () s-hi ([reg s-hi]))
       (op qcd-scalef () (r-c) ([reg c] [reg s-c]))
       (op qcd-madd-lohi () (r) ([reg r-c]
                                 [reg lo] [reg s-lo]
                                 [reg hi] [reg s-hi]))
       (store qcd-fermion () ([reg res-x]) [reg r])
       (op pointer-add () (a-k) ([reg a-k] [const (size-of A-table)]))
       (op pointer-add () (res-x) ([reg res-x] [const (size-of Fermion)]))
       (op pointer-add () (src-x) ([reg src-x] [const (size-of Fermion)])))))

;(procedure A+F  ([stem "do_ApF"] count-flops)
;           ([res-x     pointer   "result"    "struct Fermion *"              ]
; 	     [size      int       "size"      "int"                           ]
;            [LsV       int       "LsV"       "int"                           ]
;            [a-table   pointer   "a_table"   "const struct ATable *"         ]
;            [f-table   pointer   "f_table"   "const struct FTable *"         ]
;            [U         pointer   "U"         "const struct SUn *"            ]
;            [src-x     pointer   "src_x"     "const struct Fermion *"        ]
;            [src-y     pointer   "src_y"     "const struct Fermion *"        ]
;            [rec-y     pointer   "rec_y"     "const struct ProjectedFermion *])
;  ; XX
;  (op int-add () (z) ([reg size] [const 12]))
;)
