(procedure test-proc ([stem "test"] count-flops)
      ([a pointer   "a"    "int *"]
       [b pointer   "b"    "double *"]
       [c pointer   "d"    "double _Complex *"]
       [va int      "va"   "int"]
       [vb double   "vb"   "double"])
   (load int ()
       r-a
       ([reg a] [const 20]))
   (load complex-double ()
       r-c0
       ([reg c] [reg r-a]))
   (load complex-float ()
       r-c1
       ([reg c] [reg r-a] [const (size-of complex-float)]))
   (load double ()
       r-b
       ([reg b] [reg va]))
   (op int-add () (r-x) ([reg r-a] [reg va]))
   (op int-sub () (r-z) ([reg r-z] [const 123]))
   (op int-mul () (r-v) ([reg r-x] [reg r-z]))
   (loop () [i [const 1] [reg r-v]]
     (op int-mul () (r-z) ([reg r-z] [reg i]))
     (op complex-madd () (r-c0) ([reg r-c0] [reg r-c0] [reg r-c1]))
     (op int-add () (r-z) ([reg r-z] [reg i]))
     (op int-mul () (idx) ([reg i] [const (size-of complex-double)]))
     (load complex-double ()
         r-c1
         ([reg c] [reg idx])))
   (store int ()
       ([reg va] [const (size-of int)])
       [reg r-z])
   (op double-add () (d-vv) ([reg r-b] [reg r-b]))
   (if-else [reg va]
       (begin
          (op double-neg () (d-vq) ([reg r-b]))
          (store double ()
             ([reg b])
              [reg d-vq]))
       (store double ()
          ([reg b])
           [reg d-vv]))
   (store complex-double ()
       ([reg c] [const (* 10 (size-of complex-double))])
       [reg r-c0]))

(procedure test-proc ([stem "test2"])
      ([a  pointer   "a"    "int *"]
       [b  pointer   "b"    "double *"]
       [c  pointer   "d"    "double _Complex *"]
       [va int       "va"   "int"]
       [vb double    "vb"   "double"])
   (load int ()
       r-a
       ([reg a] [const 20]))
   (load complex-double ()
       r-c0
       ([reg c] [reg r-a]))
   (load complex-float ()
       r-c1
       ([reg c] [reg r-a] [const (size-of complex-float)]))
   (load double ()
       r-b
       ([reg b] [reg va]))
   (op int-add () (r-x) ([reg r-a] [reg va]))
   (op int-sub () (r-z) ([reg r-z] [const 123]))
   (op int-mul () (r-v) ([reg r-x] [reg r-z]))
   (loop () [i [const 1] [reg r-v]]
     (op int-mul () (r-z) ([reg r-z] [reg i]))
     (op complex-madd () (r-c0) ([reg r-c0] [reg r-c1] [reg r-c1]))
     (op int-add () (r-z) ([reg r-z] [reg i]))
     (op int-mul () (idx) ([reg i] [const (size-of complex-double)]))
     (load complex-double ()
         r-c1
         ([reg c] [reg idx])))
   (store int ()
       ([reg va] [const (size-of int)])
       [reg r-z])
   (op double-add () (d-vv) ([reg r-b] [reg r-b]))
   (store double ()
       ([reg b])
       [reg d-vv])
   (store complex-double ()
       ([reg c] [const (* 10 (size-of complex-double))])
       [reg r-c0]))
