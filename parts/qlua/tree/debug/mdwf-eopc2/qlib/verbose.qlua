
function print_network_settings()
  local ms, s 
  ms, s = qcd.network()
  local s_str=''
  if s[1] then
    s_str = string.format('%3d', s[1])
    for i = 2, #s do s_str = s_str .. string.format(' %3d', s[i]) end
  end
  printf("network: %d nodes [%s]\n", ms, s_str)
end
function print_subgrid_settings(L)
  local ln = L:network()
  local ln_str = string.format('%3d', ln[1])
  local sg_str = string.format('%3d', L[0] / ln[1])
  for i = 2, #ln do
    ln_str = ln_str .. string.format(' %3d', ln[i])
    sg_str = sg_str .. string.format(' %3d', L[i-1] / ln[i])
  end
  printf("%s: network=[%s] subgrid=[%s]\n", tostring(L), ln_str, sg_str)
end

-- moved from qop tests and simplified [sns 2015/10/13]
function print_obj(t, name)
  name  = name or tostring(t)
  if type(t) == "table" then
    printf("%s : TABLE\n", name)
    local t_mt = getmetatable(t)
    if t_mt then 
      print_obj(t_mt, string.format("%s.META", name))
    end
    for i, v in pairs(t) do
      local name_i = string.format("%s[%s]", name, tostring(i))
      print_obj(v, name_i)
    end
  else
    printf("%s : (%s) %s\n", name, type(t), tostring(t))
  end
end
