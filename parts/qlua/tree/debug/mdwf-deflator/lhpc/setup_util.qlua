-- routines frequently used on job startup
--


-- momentum lists 
function mom3d_list_norm2max(mom2_max)
  local pi_max = 0
  while pi_max * pi_max <= mom2_max do pi_max = pi_max + 1 end
  local mom_list = {}
  for px = -pi_max + 1, pi_max - 1 do
    for py = -pi_max + 1, pi_max - 1 do
      for pz = -pi_max + 1, pi_max - 1 do
        if px * px + py * py + pz * pz <= mom2_max then
          table.insert(mom_list, {px, py, pz})
        end
      end
    end
  end
  return mom_list
end

function rnd_init(L, x)
  local l_s = 1
  local l_id = L:Int(0)
  for d = 0, #L - 1 do
    l_id = l_id + l_s * L:pcoord(d)
    l_s = l_s * L[d]
  end
  return L:RandomState(x, l_id)
end

-- return field 'f' shifted 'from_forward' by vector 'v'; all components of 'v' must be >=0
-- equivalent to shifting the origin of lattice: point 'v' will be the new {0,0,0,0}
function shift_origin_field(f, v)
  local L = f.lattice
  local res = f
  for mu=0, #L-1 do
    assert(0 <= test_shift_vec[1+mu])
    for k=0, test_shift_vec[1+mu] - 1 do
      res = res:shift(mu, "from_forward")
    end
  end
  return res
end


function make_mom_list(mom2_max)
  local pi_max = 0
  while pi_max * pi_max <= mom2_max do pi_max = pi_max + 1 end
  local mom_list = {}
  for px = -pi_max + 1, pi_max - 1 do
    for py = -pi_max + 1, pi_max - 1 do
      for pz = -pi_max + 1, pi_max - 1 do
        if px * px + py * py + pz * pz <= mom2_max then
          table.insert(mom_list, {px, py, pz})
        end
      end
    end
  end
  return mom_list
end
function make_mom_list_4d(mom2_max, mom_t)
  local mom_list = make_mom_list(mom2_max)
  for i,v in pairs(mom_list) do
    v[4] = mom_t
  end
  return mom_list
end


function gauge_set_bc(u, bc)
  -- modify gauge field links u to have bc
  --  u   array of gauge link fields
  --  bc  array of bc factors (applied from left)
  local L = u[1].lattice
  for mu = 0, #L-1 do
    L:Subset{axis=mu, position=L[mu]-1}:where(function()
      u[1+mu]:set(bc[1+mu] * u[1+mu])
    end)
  end
end
