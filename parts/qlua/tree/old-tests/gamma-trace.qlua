-- test of gamma:trace()
require "stdlib"

status = true

function check_gamma(n, g)
   local r = g:trace()
   local m = g:matrix()
   local i,j
   local n2 = 0
   for i = 0, 3 do
      local e = m[{i,i}]
      n2 = n2 + e
   end

   local d = (n2 - r):abs()
   
   if d > 1e-12 then
      printf("trace failed (d=%g) on n=%d, g=%s, g:trace() = %s, not %s\n",
             d, n, tostring(g), tostring(r), tostring(n2))
      status = false
   end
end

for i = 0, 15 do
   check_gamma(i, gamma{n=i})
end

fx = {
   4.51234,
   -1,
   complex(.645234, -5.34123),
   complex(1,-3),
   complex(0,-6.356)
}
gx = gamma{n=15} * 4.2123
hx = gamma{n=5} * complex(0.12,5.34623)
for i = 1, #fx do
   gx = gx + fx[i] * gamma{n=i-1}
   hx = gamma{n=i+4} * hx + fx[i] * gx
   
end
check_gamma(12435, gx)
check_gamma(888, hx)
check_gamma(4657, gx * hx)



if status then
   printf("DONE\n")
else
   printf("gamma:trace() test FAILED\n")
   os.exit(1)
end
