-- test of gamma:transpose()
require "stdlib"

status = true

function check_gamma(n, g)
   local h = g:transpose()
   local d = g:matrix() - h:matrix():transpose()
   local z = (d:conj() * d):trace():abs()
   if z > 0.0001 then
	  printf("transpose failed on n=%d, g=%s, h=%s\n", n, tostring(g), tostring(h))
	  status = false
   end
end

for i = 0, 15 do
   check_gamma(i, gamma{n=i})
   check_gamma(i, gamma{n=i} * 0.36314)
   check_gamma(i, gamma{n=i} * complex(465.1341, 123.5))
end
for i = 0, 3 do
   local v = gamma{mu=i}
   printf("basis   %s -> %s\n", tostring(v), tostring(v:transpose()))
end

for i = 0, 15 do
   local v = gamma{n=i}
   printf(" %2d  %s -> %s\n", i, tostring(v), tostring(v:transpose()))
end


if status then
   printf("DONE\n")
else
   printf("gamma:transpose() test FAILED\n")
   os.exit(1)
end
