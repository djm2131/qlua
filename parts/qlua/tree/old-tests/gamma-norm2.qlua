-- test of gamma:norm2()
require "stdlib"

status = true

function check_gamma(n, g)
   local r = g:norm2()
   local m = g:matrix()
   local i,j
   local n2 = 0
   for i = 0, 3 do
      for j = 0, 3 do
         local e = m[{i,j}]
         n2 = n2 + (e:conj() * e):real()
      end
   end

   if not (r == n2) then
      printf("norm failed on n=%d, g=%s, g:norm2() = %s\n",
             n, tostring(g), tostring(r))
      status = false
   end
end

for i = 0, 15 do
   check_gamma(i, gamma{n=i})
end

for i = 0, 15 do
   for j = 0, 15 do
      check_gamma(i * 16 + j, gamma{n=i} + gamma{n=j})
      check_gamma(i * 16 + j, gamma{n=i} * gamma{n=j})
   end
end

-- A somewhat random gamma matrix
fx = {
   45.1234,
   -1,
   complex(645.234, -534.123),
   complex(1,-3),
   complex(0,-6356)
}
gx = gamma{n=15} * 42.123
for i = 1, #fx do
   gx = gx + fx[i] * gamma{n=i-1}
end
check_gamma(12435, gx)


if status then
   printf("DONE\n")
else
   printf("gamma:norm2() test FAILED\n")
   os.exit(1)
end
