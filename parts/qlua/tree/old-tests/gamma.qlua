g0 = gamma{mu=0}
g2 = gamma{mu=2}
gx = gamma{n=7}

print("g0", g0, -g0)
print("g2", g2, -g2)
print("gx", gx, -gx)

function ch_plus(a, b)
  print("add/sub:", a, b, a + b, a - b)
  return a + b
end

ch_plus(g0, -g2)
ch_plus(1, g0)
ch_plus(g2, 1)
ch_plus(1+g2, -1)
z = ch_plus(gx, complex(1,2))
ch_plus(3, z)
ch_plus(z, 4)

ch_plus(-complex(2, 1), z)
ch_plus(z, -complex(2, 2))

function ch_mul(a, b)
  print("mul", a, b, a * b)
  return a * b
end

ch_mul(1, g0)
ch_mul(0, g2)
ch_mul(3, gx)
ch_mul(-3, gx)
ch_mul(gx+g0, 2.5)
ch_mul(gx+g0, complex(2,3))
ch_mul(complex(2,3), gamma{mu=5})
ch_mul(complex(2,3), gamma{mu=5} * complex(2,-3))

for i = 0, 3 do
  for j = i, 3 do
     print(i, j, gamma{mu=i}, gamma{mu=j}, gamma{mu=i}*gamma{mu=j})
  end
end

print()
for i = 0, 15 do
  for j = 0, 15 do
    gi = gamma{n=i}
    gj = gamma{n=j}
    print(i, j, gi, gj, gi * gj)
  end
end

print(1 + (gamma{mu=0} +
           gamma{mu=1} +
           gamma{mu=2} +
           gamma{mu=3}) / 2)

LAT = qcd.lattice({6})
S = LAT:RandomState(1, LAT:pcoord(0))

f1 = S:gaussian_DiracFermion()
f2 = S:gaussian_DiracFermion()

function D_dot(a,b)
   return qcd.dot(a,b):sum()
end

for i = 0, 15 do
   local z = gamma{n=i}
   local q1 = z * f1
   local q2 = z * f2
   local a = D_dot(f2, q1)
   local b = D_dot(q2, f1)
   if (a-b):abs() < 1e-6 then
      print("   Z", i, 0)
   else
      print("   Z", i, 1)
   end
end

f1 = S:gaussian_DiracFermion()
f2 = f1:gamma{mu=1} + f1:gamma{mu=5} * 0.75 + f1:gamma{n=10} * complex(1,2)

print(qcd.dot(f1,f2):sum())
for i = 0, 3 do
  local z = f1:gamma{mu=i}
  print(" conj G", i, D_dot(f1, z), D_dot(z, f1))
end

print(" Reg Gammas", D_dot(f2,f2))
gg = gamma{mu=1} + gamma{mu=5} * 0.75 + gamma{n=10} * complex(1,2)
gx = gg:conj() * gg
print(" New Gammas", D_dot(f1, gx * f1))
