#!/bin/sh

if [ "X$2" != "X" ]; then
  checkfunc='if(f!="'"$2"'") next;'
fi

cat "$1" |awk '
/^QDP function/{ prof = -1; next; }
/^------------/{ prof = -prof; next; }
{
  if((match($1,"QDP_")!=1)&&(match($1,"-comm$")!=1)) { prof = 0; }
  if(prof<=0) next;
  o = 0;
  q0 = q;
  f0 = f;
  q = $1;
  if(match($2,"restart")) { q = $1$2; o = 1; }
  c = $(2+o);
  ms = $(3+o);
  tc = $(4+o);
  ns = $(5+o);
  split($(6+o),a,":");
  f = a[1];
  l = a[2];
  '"$checkfunc"'
  if(ns+0==0) ns = 0.25;
  if(match($1,"-comm")) {
    qms[q0] -= ms;
    #qs[q0] -= ms/ns;
    fms[f0] -= ms;
    tot -= ms;
    q = q0$1;
  }
  #printf("%s %s\n", q, f);
  qms[q] += ms;
  qs[q] += ms/ns;
  fms[f] += ms;
  tot += ms;
}
function vsort(a) {
  n = 0;
  for(k in a) {
    n++;
    for(i=n; i>1; i--) {
      if(a[k]<a[b[i-1]]) b[i] = b[i-1];
      else break;
    }
    b[i] = k;
  }
}
END{
  mfa["3_V_meq_V"] = 6;
  mfa["3_M_peq_M"] = 18;
  mfa["3_r_eq_norm2_V"] = 12;
  mfa["3_r_eq_re_V_dot_V"] = 12;
  mfa["3_V_peq_r_times_V"] = 12;
  mfa["3_V_meq_r_times_V"] = 12;
  mfa["3_M_eq_r_times_M"] = 18;
  mfa["3_M_peq_r_times_M"] = 36;
  mfa["3_V_eq_r_times_V_plus_V"] = 12;
  mfa["3_V_eq_r_times_V_minus_V"] = 12;
  mfa["3_V_vpeq_M_times_V"] = 72;
  mfa["3_M_peq_C_times_M"] = 72;
  mfa["3_C_peq_M_dot_M"] = 72;
  mfa["3_M_eq_M_times_M"] = 198;
  mfa["3_M_eq_Ma_times_M"] = 198;
  mfa["3_M_eq_M_times_Ma"] = 198;
  mfa["2_D_vpeq_spproj_M_times_D"] = 80;
  mfa["3_D_vpeq_spproj_M_times_D"] = 168;
  printf("%-40s %10s %10s %10s %10s\n",
         "QDP functions", "seconds", "cum. %", "ns/site", "Mflops");
  vsort(qms);
  tot *= 1e-3;
  tt = 0;
  for(i=1; i<=n; i++) {
    q = b[i];
    t = 1e-3*qms[q];
    tqs = qs[q];
    if(tqs+0==0) tqs = 0.25;
    ns = qms[q]/tqs;
    if(ns+0==0) ns = 0.25;
    qg = q;
    sub("QDP_.._", "", qg);
    mf = 1000*mfa[qg]/ns;
    printf("%-40s %10.3f %10.3f %10.3f", q, t, 100*(tot-tt)/tot, ns);
    if(mf>0) printf(" %10.3f", mf);
    printf("\n");
    tt += t;
  }
  printf("%-40s %10.3f\n", "total", tt);
  printf("calling functions\n");
  vsort(fms);
  tt = 0;
  for(i=1; i<=n; i++) {
    f = b[i];
    t = 1e-3*fms[f];
    printf("%-40s %10.3f %10.3f \n", f, t, 100*(tot-tt)/tot);
    tt += t;
  }
  printf("%-40s %10.3f\n", "total", tt);
}
'
