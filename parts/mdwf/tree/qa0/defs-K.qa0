(define (S-compute-K res-x l-s k-table src-x)
  (op nop (start S-compute-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-s) ([reg src-x]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-s]))
     (load double () k-re ([reg p-k] [const (offset-of K-Table k)]))
     (op qcd-scalef () (kx) ([reg k-re] [reg x]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of K-Table)]))
     (op pointer-add () (p-s) ([reg p-s] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-K) () ()))

(define (S-compute-complex-K res-x l-s k-table src-x)
  (op nop (start S-compute-complex-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-s) ([reg src-x]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-s]))
     (load double () k-re ([reg p-k] [const (offset-of c-K-Table k-re)]))
     (load double () k-im ([reg p-k] [const (offset-of c-K-Table k-im)]))
     (op complex () (k-v) ([reg k-re] [reg k-im]))
     (op qcd-complex-scalef () (kx) ([reg k-v] [reg x]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of c-K-Table)]))
     (op pointer-add () (p-s) ([reg p-s] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-complex-K) () ()))

(define (S-compute-complex-K-conj res-x l-s k-table src-x)
  (op nop (start S-compute-complex-K-conj) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-s) ([reg src-x]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-s]))
     (load double () k-re ([reg p-k] [const (offset-of c-K-Table k-re)]))
     (load double () k-im ([reg p-k] [const (offset-of c-K-Table k-im)]))
     (op complex () (k-v) ([reg k-re] [reg k-im]))
     (op qcd-complex-conj-scalef () (kx) ([reg k-v] [reg x]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of c-K-Table)]))
     (op pointer-add () (p-s) ([reg p-s] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-complex-K-conj) () ()))

(define (S-compute-sub-K res-x l-s src-x k-table src-y)
  (op nop (start S-compute-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-x) ([reg src-x]))
  (op pointer-move () (p-y) ([reg src-y]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-x]))
     (load qcd-fermion () y ([reg p-y]))
     (load double () k-re ([reg p-k] [const (offset-of K-Table k)]))
     (op qcd-scalef () (ky) ([reg k-re] [reg y]))
     (op qcd-subf () (kx) ([reg x] [reg ky]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of K-Table)]))
     (op pointer-add () (p-x) ([reg p-x] [const (size-of Fermion)]))
     (op pointer-add () (p-y) ([reg p-y] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-K) () ()))

(define (S-compute-sub-K-norm res-x norm l-s src-x k-table src-y)
  (op nop (start S-compute-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-x) ([reg src-x]))
  (op pointer-move () (p-y) ([reg src-y]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-x]))
     (load qcd-fermion () y ([reg p-y]))
     (load double () k-re ([reg p-k] [const (offset-of K-Table k)]))
     (op qcd-scalef () (ky) ([reg k-re] [reg y]))
     (op qcd-subf () (kx) ([reg x] [reg ky]))
     (op qcd-fnorm-add () (norm) ([reg norm] [reg kx]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of K-Table)]))
     (op pointer-add () (p-x) ([reg p-x] [const (size-of Fermion)]))
     (op pointer-add () (p-y) ([reg p-y] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-K) () ()))

(define (S-compute-sub-complex-K res-x l-s src-x k-table src-y)
  (op nop (start S-compute-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-x) ([reg src-x]))
  (op pointer-move () (p-y) ([reg src-y]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-x]))
     (load qcd-fermion () y ([reg p-y]))
     (load double () k-re ([reg p-k] [const (offset-of c-K-Table k-re)]))
     (load double () k-im ([reg p-k] [const (offset-of c-K-Table k-im)]))
     (op complex () (k-v) ([reg k-re] [reg k-im]))
     (op qcd-complex-scalef () (ky) ([reg k-v] [reg y]))
     (op qcd-subf () (kx) ([reg x] [reg ky]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of c-K-Table)]))
     (op pointer-add () (p-x) ([reg p-x] [const (size-of Fermion)]))
     (op pointer-add () (p-y) ([reg p-y] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-K) () ()))

(define (S-compute-sub-complex-K-norm res-x norm l-s src-x k-table src-y)
  (op nop (start S-compute-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-x) ([reg src-x]))
  (op pointer-move () (p-y) ([reg src-y]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-x]))
     (load qcd-fermion () y ([reg p-y]))
     (load double () k-re ([reg p-k] [const (offset-of c-K-Table k-re)]))
     (load double () k-im ([reg p-k] [const (offset-of c-K-Table k-im)]))
     (op complex () (k-v) ([reg k-re] [reg k-im]))
     (op qcd-complex-scalef () (ky) ([reg k-v] [reg y]))
     (op qcd-subf () (kx) ([reg x] [reg ky]))
     (op qcd-fnorm-add () (norm) ([reg norm] [reg kx]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of c-K-Table)]))
     (op pointer-add () (p-x) ([reg p-x] [const (size-of Fermion)]))
     (op pointer-add () (p-y) ([reg p-y] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-K) () ()))

(define (S-compute-sub-complex-K-conj res-x l-s src-x k-table src-y)
  (op nop (start S-compute-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-x) ([reg src-x]))
  (op pointer-move () (p-y) ([reg src-y]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-x]))
     (load qcd-fermion () y ([reg p-y]))
     (load double () k-re ([reg p-k] [const (offset-of c-K-Table k-re)]))
     (load double () k-im ([reg p-k] [const (offset-of c-K-Table k-im)]))
     (op complex () (k-v) ([reg k-re] [reg k-im]))
     (op qcd-complex-conj-scalef () (ky) ([reg k-v] [reg y]))
     (op qcd-subf () (kx) ([reg x] [reg ky]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of c-K-Table)]))
     (op pointer-add () (p-x) ([reg p-x] [const (size-of Fermion)]))
     (op pointer-add () (p-y) ([reg p-y] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-K) () ()))

(define (S-compute-sub-complex-K-conj-norm res-x norm l-s src-x k-table src-y)
  (op nop (start S-compute-K) () ())
  (op pointer-move () (p-k) ([reg k-table]))
  (op pointer-move () (p-d) ([reg res-x]))
  (op pointer-move () (p-x) ([reg src-x]))
  (op pointer-move () (p-y) ([reg src-y]))
  (loop () (j [const 0] [reg l-s])
     (load qcd-fermion () x ([reg p-x]))
     (load qcd-fermion () y ([reg p-y]))
     (load double () k-re ([reg p-k] [const (offset-of c-K-Table k-re)]))
     (load double () k-im ([reg p-k] [const (offset-of c-K-Table k-im)]))
     (op complex () (k-v) ([reg k-re] [reg k-im]))
     (op qcd-complex-conj-scalef () (ky) ([reg k-v] [reg y]))
     (op qcd-subf () (kx) ([reg x] [reg ky]))
     (op qcd-fnorm-add () (norm) ([reg norm] [reg kx]))
     (store qcd-fermion () ([reg p-d]) [reg kx])
     (op pointer-add () (p-k) ([reg p-k] [const (size-of c-K-Table)]))
     (op pointer-add () (p-x) ([reg p-x] [const (size-of Fermion)]))
     (op pointer-add () (p-y) ([reg p-y] [const (size-of Fermion)]))
     (op pointer-add () (p-d) ([reg p-d] [const (size-of Fermion)])))
  (op nop (end S-compute-K) () ()))
