(verbose [(c99 bgl/xlc) "/* $Id$ */"])
(include "types.qa0")

;; r memory order:
;;  [0].[0][0].re
;;  [0].[0][0].im
;;  [0].[0][1].re
;;  [0].[0][1].im
;;  ...
;;  [0].[0][nF-1].im
;;  [1].[1][0].re
;;  ...
;;  [0].[nC-1][nF-1].im
;;  [1].[0][0].re
;;  ...
;;  [d-1].[nC-1][nF-1].im
;;
(procedure get-fermion ([stem "get_fermion"]
                        prec&color)
           ([data      pointer "r"         "double *"               ]
            [F         pointer "F"         "const struct Fermion *" ]
            [index     int     "p"         "size_t"                 ]
            [l-s       int     "Ls"        "size_t"                 ])

   (op int-mul () (x) ([reg index] [const (size-of Fermion)]))
   (op int-mul () (x1) ([reg x] [reg l-s]))
   (op pointer-add () (ptr) ([reg F] [reg x1]))
   (loop () (i [const 0] [reg l-s])
     (loop () (c [const 0] [const *colors*])
       (loop () (d [const 0] [const *fermion-dim*])
         (op qcd-fermion-offset () (cd) ([reg c] [reg d]))
         (op pointer-add () (p) ([reg ptr] [reg cd]))
         (load COMPLEX () v ([reg p]))
         (op complex-real () (v-re) ([reg v]))
         (op complex-imag () (v-im) ([reg v]))
         (store double () ([reg data]) [reg v-re])
         (store double () ([reg data] [const (size-of double)]) [reg v-im])
         (op pointer-add () (data) ([reg data] [const (* 2 (size-of double))]))
       ))
      (op pointer-add () (ptr) ([reg ptr] [const (size-of Fermion)]))))
