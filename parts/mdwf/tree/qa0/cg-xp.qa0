;; Update x and p in the CG:
;;  x <- x + alpha p
;;  p <- r + beta p
;;
(verbose [(c99 bgl/xlc) "/* $Id$ */"])

(include "types.qa0")

(procedure cg-x&p ([stem "cg_xp"]
                    prec&color
                    count-flops)
           ([x         pointer "x"         "struct Fermion *"       ]
            [p         pointer "p"         "struct Fermion *"       ]
            [start     int     "start"     "size_t"                 ]
            [size      int     "size"      "size_t"                 ]
            [l-s       int     "Ls"        "size_t"                 ]
            [alpha     double  "alpha"     "double"                 ]
            [beta      double  "beta"      "double"                 ]
            [r         pointer "r"         "const struct Fermion *" ])
   (op int-mul () (start*ls) ([reg start] [reg l-s]))
   (op int-mul () (offset) ([reg start*ls] [const (size-of Fermion)]))
   (op pointer-add () (x) ([reg x] [reg offset]))
   (op pointer-add () (p) ([reg p] [reg offset]))
   (op pointer-add () (r) ([reg r] [reg offset]))
   (loop () (i [const 0] [reg size])
     (loop () (s [const 0] [reg l-s])
       (load qcd-fermion () f-x ([reg x]))
       (load qcd-fermion () f-p ([reg p]))
       (load qcd-fermion () f-r ([reg r]))
       (op qcd-maddf () (g-x) ([reg f-x] [reg alpha] [reg f-p]))
       (op qcd-maddf () (g-p) ([reg f-r] [reg beta] [reg f-p]))
       (store qcd-fermion () ([reg x]) [reg g-x])
       (store qcd-fermion () ([reg p]) [reg g-p])
       (op pointer-add () (x) ([reg x] [const (size-of Fermion)]))
       (op pointer-add () (p) ([reg p] [const (size-of Fermion)]))
       (op pointer-add () (r) ([reg r] [const (size-of Fermion)])))))
