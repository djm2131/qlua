(verbose [(c99 bgl/xlc) "/* $Id$ */"])

(include "types.qa0")

;; F & G memory order:
;;   0th index: flavor index
;;   1st index: lattice index
;;   2nd index: vector of fermions
;;  vf[0][0][0]
;;  vf[1][0][0]
;;  ....
;;  vf[ls-1][0][0]
;;  vf[0][1][0]
;;  ....
;;  vf[ls-1][size-1][0]
;;  ::::::
;;  vf[0][0][1]
;;  ...
;;
(procedure vf-dot-mz ([stem "vf_dot_mz"]
                       prec&color
                       count-flops)
           ([start     int     "start"     "size_t"                  ]
            [size      int     "size"      "size_t"                  ]
            [ls        int     "ls"        "size_t"                  ]
            [F         pointer "F"         "struct vFermion *"       ]
            [fv-stride int     "fv_stride" "size_t"                  ]
            [fv-begin  int     "fv_begin"  "size_t"                  ]
            [fv-len    int     "fv_len"    "size_t"                  ]
            [G         pointer "G"         "const struct vFermion *" ]
            [gv-stride int     "gv_stride" "size_t"                  ]
            [gv-begin  int     "gv_begin"  "size_t"                  ]
            [gv-len    int     "gv_len"    "size_t"                  ]
            [ptr-c     pointer "c"         "const double *"          ]
            [c-size    int     "ldc"       "size_t"                  ])
   (op int-mul () (f-offset) ([reg fv-begin] [reg fv-stride]))
   (op int-mul () (g-offset) ([reg gv-begin] [reg gv-stride]))
   (op int-mul () (c-stride) ([reg c-size] [const (* 2 (size-of double))]))
   (op pointer-add () (F) ([reg F] [reg f-offset]))
   (op pointer-add () (G) ([reg G] [reg g-offset]))
   (op int-mul () (start*ls) ([reg start] [reg ls]))
   (op int-mul () (offset-fermion) ([reg start*ls] [const (size-of Fermion)]))
   (op pointer-add () (F) ([reg F] [reg offset-fermion]))
   (op pointer-add () (G) ([reg G] [reg offset-fermion]))
   (loop () (x [const 0] [reg size])
     (loop () (s [const 0] [reg ls])
       (op pointer-move () (F-i) ([reg F]))
       (op pointer-move () (c) ([reg ptr-c]))
       (loop () (i [const 0] [reg fv-len])
          (op pointer-move () (G-j) ([reg G]))
          (op pointer-move () (c-x) ([reg c]))
          (op qcd-zerof () (v) ())
          (loop () (j [const 0] [reg gv-len])
             (load double () r-r ([reg c-x]))
             (load double () r-i ([reg c-x] [const (size-of double)]))
             (op complex () (cz) ([reg r-r] [reg r-i]))
             (load qcd-fermion () G-x ([reg G-j]))
             (op qcd-cmaddf () (v) ([reg v] [reg cz] [reg G-x]))
             (op pointer-add () (G-j) ([reg G-j] [reg gv-stride]))
             (op pointer-add () (c-x) ([reg c-x] [const (* 2 (size-of double))])))
          (store qcd-fermion () ([reg F-i]) [reg v])
          (op pointer-add () (F-i) ([reg F-i] [reg fv-stride]))
          (op pointer-add () (c) ([reg c] [reg c-stride])))
       (op pointer-add () (F) ([reg F] [const (size-of Fermion)]))
       (op pointer-add () (G) ([reg G] [const (size-of Fermion)])))))
