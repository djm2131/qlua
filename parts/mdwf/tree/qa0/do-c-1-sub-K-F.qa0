;; compute r = phi - K F psi, complex case

(include "types.qa0")
(include "defs-K.qa0")
(include "defs-F.qa0")

(procedure do-c-1-sub-K-F ([stem "doc_1mKF"]
                           prec&color
                           count-flops)
       ([res-x     pointer   "res_x"      "struct Fermion *"         ]
        [start     int       "start"      "size_t"                   ]
        [size      int       "size"       "size_t"                   ]
        [l-s       int       "Ls"         "size_t"                   ]
        [k-table   pointer   "ktable_p"   "const struct KTable *"    ]
        [nb        pointer   "neighbor"   "const struct neighbor *"  ]
        [U         pointer   "U"          "const struct SUn *"       ]
        [src-x     pointer   "src_x"      "const struct Fermion *"   ]
        [src-y     pointer   "src_y"      "const struct Fermion *"   ]
        [buf*      pointer   "rb"         "void **"                  ])
  (op int-mul () (s-h-line) ([reg l-s] [const (size-of Projected-Fermion)]))
  (op int-mul () (s-f-line) ([reg l-s] [const (size-of Fermion)]))
  (op int-mul () (start*ls) ([reg start] [reg l-s]))
  (op int-mul () (offset-x) ([reg start*ls] [const (size-of Fermion)]))
  (op pointer-add () (res-x) ([reg res-x] [reg offset-x]))
  (op pointer-add () (src-x) ([reg src-x] [reg offset-x]))
  (op int-mul () (offset-nb) ([reg start] [const (size-of neighbor)]))
  (op pointer-add () (nb) ([reg nb] [reg offset-nb]))
  (loop () (i [const 0] [reg size])
    (op pointer-move () (r) ([reg res-x]))
    (macro S-compute-F [reg r] [reg l-s] [reg s-f-line] [reg s-h-line]
                       [reg nb] [reg U] [reg src-y] [reg buf*])
    (macro S-compute-sub-complex-K [reg res-x] [reg l-s]
                                   [reg src-x]
                                   [reg k-table] [reg res-x])
    (op pointer-add () (res-x) ([reg res-x] [reg s-f-line]))
    (op pointer-add () (src-x) ([reg src-x] [reg s-f-line]))))
