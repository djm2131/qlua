(verbose [(c99 bgl/xlc) "/* $Id$ */"])

(include "types.qa0")

(procedure fermion-f=d-d ([stem "f_f_eq_dmd_norm2"]
                          count-flops)
           ([R         pointer "r"         "struct FermionF *"       ]
            [n         pointer "norm2"     "double *"                ]
            [start     int     "start"     "size_t"                  ]
            [size      int     "size"      "size_t"                  ]
            [l-s       int     "Ls"        "size_t"                  ]
            [A         pointer "a"         "const struct FermionD *" ]
            [B         pointer "b"         "const struct FermionD *" ])
   (op qcd-fnorm-init () (n-val) ())
   (op int-mul () (start*ls) ([reg start] [reg l-s]))
   (op int-mul () (offset-double) ([reg start*ls] [const (size-of Fermion-double)]))
   (op int-mul () (offset-float) ([reg start*ls] [const (size-of Fermion-float)]))
   (op pointer-add () (R) ([reg R] [reg offset-float]))
   (op pointer-add () (A) ([reg A] [reg offset-double]))
   (op pointer-add () (B) ([reg B] [reg offset-double]))
   (loop () (i [const 0] [reg size])
     (loop () (s [const 0] [reg l-s])
       (load qcd-fermion-double () vA ([reg A]))
       (op pointer-add () (A) ([reg A] [const (size-of Fermion-double)]))
       (load qcd-fermion-double () vB ([reg B]))
       (op pointer-add () (B) ([reg B] [const (size-of Fermion-double)]))
       (op qcd-subf () (A-B) ([reg vA] [reg vB]))
       (op qcd-fnorm-add () (n-val) ([reg n-val] [reg A-B]))
       (store qcd-fermion-float () ([reg R]) [reg A-B])
       (op pointer-add () (R) ([reg R] [const (size-of Fermion-float)]))))
   (op qcd-fnorm-fini () (v) ([reg n-val]))
   (store double () ([reg n]) [reg v]))
